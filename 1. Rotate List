/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {

        if (k==0)
        return head;

        if (head==nullptr|| head->next==nullptr)
        return head;

        ListNode* temp = head;
        int len = 1;
        while (temp->next)
        {
            temp=temp->next;
            len++;
        }

        ListNode* tail = temp;
        int ans = k%len;
        int main_ans = len - ans;
        tail->next = head;
        temp = head;
        while (main_ans>1)
        {
            temp=temp->next;
            main_ans--;
        }
        head = temp->next;
        temp->next = nullptr;
        return head;

    }
};
